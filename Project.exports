################################################################################
# First, the basic list of "facilities" that can have executables, libraries, and scripts
os
runtime/util
runtime/dataplane/rdma_utils
runtime/dataplane/rdma_driver_interface
runtime/dataplane/rdma_smb
runtime/dataplane/rdma_drivers/datagram
runtime/dataplane/rdma_drivers/dma
runtime/dataplane/rdma_drivers/ofed
runtime/dataplane/rdma_drivers/pio
runtime/dataplane/rdma_drivers/sockets
runtime/dataplane/rdma_drivers/udp
runtime/dataplane/transport
runtime/dataplane/msg_driver_interface
runtime/dataplane/msg_drivers
runtime/dataplane/rdma_tests
runtime/library
runtime/container
runtime/hdl
runtime/hdl-support
runtime/ocl
runtime/rcc
runtime/remote
runtime/ctests
runtime/application
tools/cdkutils
tools/ocpigen
tools/cdk/ocpidds
tools/astyle
tests
################################################################################
# exclusions, sometimes only applying to categories
-runtime/util main
-runtime/dataplane main
-runtime/ctests
-tools/astyle
################################################################################
# inclusions that are not automatically derived from facilities
+tools/cdk/default-system.xml
# The problem with this is that we don't want to export the built stuff?
+examples
# SW platforms have no specific exports yet.  Should have Makefile and make var?
+platforms
# generic make scripts
+tools/cdk/include/lib.mk include/
+tools/cdk/include/library.mk include/
+tools/cdk/include/util.mk include/
+tools/cdk/include/package.mk include/
+tools/cdk/include/worker.mk include/
+tools/cdk/include/xxx-worker.mk include/
+tools/cdk/include/ocpisetup.mk include/
+tools/cdk/include/ocpisetup.mk
+tools/cdk/include/libraries.mk include/
+tools/cdk/include/project.mk include/
+tools/cdk/include/applications.mk include/
+tools/cdk/include/application.mk include/
# CDK scripts we need
+tools/cdk/scripts/makeStaticWorker scripts/
+tools/cdk/scripts/ocpidriver scripts/
+tools/cdk/scripts/ocpixml scripts/
+tools/cdk/scripts/sudo_ocpi scripts/
+tools/cdk/scripts/ocpisetup.sh scripts/
+tools/cdk/scripts/ocpibootstrap.sh scripts/
+tools/cdk/scripts/ocpidev scripts/
+tools/cdk/scripts/util.sh scripts/
#+tools/cdk/scripts/makeExportLinks.sh scripts/
+scripts/makeExportLinks.sh scripts/
# user level scripts made available in the bin directory
+tools/cdk/scripts/ocpixml bin/<target>/
+tools/cdk/scripts/ocpidev bin/<target>/
+tools/cdk/scripts/ocpidriver bin/<target>/
+tools/cdk/specs
# linux driver
+os/linux/driver/99-opencpi.rules lib/<target>/
+os/linux/driver/mdev-opencpi.rules lib/<target>/
+os/linux/driver/target-<target>/opencpi*.ko lib/<target>/
+os/linux/driver/ocpi_linux_driver scripts/
################################################################################
# RCC related exclusions and additions
# We don't want everything so we are selective here.  was: +tools/cdk/include/rcc include/rcc
# After more cleanup we may be able to default to everything
+runtime/rcc/include/RCC_Worker.h include/rcc/
+tools/cdk/include/rcc/rcc-make.mk include/rcc/
+tools/cdk/include/rcc/rcc-worker.mk include/rcc/
+tools/cdk/include/rcc/default.mk include/rcc/
# We export everything in tools/cdk/include/hdl, although we could be more careful...
+tools/cdk/include/hdl include/hdl
# These should be in a common-to-zynq-platforms dir in "platforms"...
+tools/cdk/include/rcc/linux-c6-x86_64=linux-zynq-arm.mk include/rcc/
+tools/cdk/include/rcc/linux-c7-x86_64=linux-zynq-arm.mk include/rcc/
# Raspi cross compiler scripts
+tools/cdk/include/rcc/linux-c7-x86_64=linux-raspi-arm.mk include/rcc/
# These are to allow them carefully for RCC workers that access other workers in the app
# They are currently redundant with the top level include, but they are here so we can
# Ultimately control visibility for workers
+runtime/application/include/OcpiApi.h include/rcc/OcpiApi.hh
+runtime/application/include/OcpiApi.h include/rcc/OcpiApi.h
+runtime/application/include/OcpiApi.h include/aci/OcpiApi.hh
+os/interfaces/include/OcpiOsDebugApi.h include/rcc/OcpiOsDebugApi.hh
+runtime/application/include/OcpiApplicationApi.h include/rcc/
+runtime/container/include/OcpiContainerApi.h include/rcc/
+runtime/util/ior/include/OcpiCorbaApi.h include/rcc/
+runtime/util/property/include/OcpiPValueApi.h include/rcc/
+runtime/util/property/include/OcpiUtilDataTypesApi.h include/rcc/
+runtime/util/property/include/OcpiUtilPropertyApi.h include/rcc/
+runtime/util/misc/include/OcpiUtilExceptionApi.h include/rcc/
+runtime/library/include/OcpiLibraryApi.h include/rcc/
################################################################################
# HDL related exclusions and additions
# test executables to suppress
-runtime/hdl-support/target-/testRpl
-runtime/hdl-support/target-/ocpinft
# test scripts to suppress that we want to keep in the repo
-runtime/hdl-support/scripts/testDMA
-runtime/hdl-support/scripts/donft
-runtime/hdl-support/scripts/dmaTestBasic
# All the HDL build scripts, no selectivity for now
+tools/cdk/include/hdl include/
# base vendor-specific scripts not in a platform and not in hdl-support
+runtime/hdl-support/altera/loadFlash_altera scripts/
+runtime/hdl-support/altera/probeJtag_altera scripts/
+runtime/hdl-support/xilinx/loadFlash_xilinx scripts/
+runtime/hdl-support/xilinx/probeJtag_xilinx scripts/
+runtime/hdl-support/xilinx/findJtagByESN_xilinx scripts/
+runtime/hdl-support/xilinx/getESNfromUSB_xilinx scripts/
+runtime/hdl-support/scripts/loadFlash bin/<target>/
+runtime/hdl-support/scripts/probeJtag bin/<target>/
+runtime/hdl-support/scripts/ocpiview bin/<target>/
+hdl/assemblies/*/container-*/target-*/*.bitz lib/hdl/assemblies/
################################################################################
# OCL related exclusions and additions
+tools/cdk/include/ocl include/
